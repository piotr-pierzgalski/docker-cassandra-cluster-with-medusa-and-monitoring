version: "2.4"
services:
  cassandra1:
    build: 
      context: ./cassandra-containerized
      dockerfile: Dockerfile
      args:
        - Cassandra_MaxHeapSizeInMB=1024
    container_name: cassandra1
    ports:
      - "9042:9042"
      - "8881:22"
      - "7071:7070"
      - "9101:9100"
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
    volumes:
      - "cassandra1volume:/var/lib/cassandra"
    environment:
      - CASSANDRA_CLUSTER_NAME=WoehCassandraClusterLocal
      - CASSANDRA_SEEDS=cassandra1,cassandra2
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_ENABLE_RPC=false
      - CASSANDRA_DC=dc1
      - CASSANDRA_RACK=rack1
    networks:
      static-network:
        ipv4_address: 172.171.170.2
    extra_hosts:
      - "cassandra1:172.171.170.2"
      - "cassandra2:172.171.170.3"
      - "cassandra3:172.171.170.4"
    depends_on:
      - prometheus
      - grafana
    mem_limit: 2048m
    #mem_reservation: 2048m
    oom_kill_disable: true
    #cpus: 2

  cassandra2:
    build: 
      context: ./cassandra-containerized
      dockerfile: Dockerfile
      args:
        - Cassandra_MaxHeapSizeInMB=1024
    container_name: cassandra2
    ports:
      - "9043:9042"
      - "8882:22"
      - "7072:7070"
      - "9102:9100"
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
    volumes:
      - "cassandra2volume:/var/lib/cassandra"
    environment:
      - CASSANDRA_CLUSTER_NAME=WoehCassandraClusterLocal
      - CASSANDRA_SEEDS=cassandra1,cassandra2
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_ENABLE_RPC=false
      - CASSANDRA_DC=dc1
      - CASSANDRA_RACK=rack2
    networks:
      static-network:
        ipv4_address: 172.171.170.3
    extra_hosts:
      - "cassandra1:172.171.170.2"
      - "cassandra2:172.171.170.3"
      - "cassandra3:172.171.170.4"
    depends_on:
      - grafana
    mem_limit: 2048m
    #mem_reservation: 2048m
    oom_kill_disable: true
    #cpus: 2

  cassandra3:
    build: 
      context: ./cassandra-containerized
      dockerfile: Dockerfile
      args:
        - Cassandra_MaxHeapSizeInMB=1024
    container_name: cassandra3
    ports:
      - "9044:9042"
      - "8883:22"
      - "7073:7070"
      - "9103:9100"
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
    volumes:
      - "cassandra3volume:/var/lib/cassandra"
    environment:
      - CASSANDRA_CLUSTER_NAME=WoehCassandraClusterLocal
      - CASSANDRA_SEEDS=cassandra1,cassandra2
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_ENABLE_RPC=false
      - CASSANDRA_DC=dc1
      - CASSANDRA_RACK=rack3
    networks:
      static-network:
        ipv4_address: 172.171.170.4
    extra_hosts:
      - "cassandra1:172.171.170.2"
      - "cassandra2:172.171.170.3"
      - "cassandra3:172.171.170.4"
    depends_on:
      - grafana
    mem_limit: 2048m
    #mem_reservation: 2048m
    oom_kill_disable: true
    #cpus: 2

  prometheus:
    container_name: prometheus
    build: 
      context: ./prometheus
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    volumes:
      - "prometheus:/prometheus"
    networks:
      static-network:
        ipv4_address: 172.171.170.5
  grafana:
    container_name: grafana
    build: 
      context: ./grafana
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: 123
    volumes:
      - "grafana:/var/lib/grafana"
    networks:
      static-network:
        ipv4_address: 172.171.170.6

volumes:
  cassandra1volume:
  cassandra2volume:
  cassandra3volume:
  grafana:
  prometheus:  

networks:
  static-network:
    ipam:
      driver: default
      config:
        - subnet: "172.171.170.0/24"